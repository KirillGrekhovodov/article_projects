services:
  db:
    image: postgres:14.3
    ports:
      - "9678:5432"
    env_file:
      - ./source/.env
    restart: always
    container_name: articles_db
    volumes:
      - ./.volumes/db:/var/lib/postgresql/data/

  redis:
    image: redis:7.0.5-alpine
    container_name: articles_redis
    command: redis-server
    volumes:
      - "./.volumes/redis:/data"
    restart: always

  web:
    build:
      context: .
      dockerfile: source/Dockerfile
    env_file:
      - ./source/.env
    ports:
      - "8000:8000"
    restart: always
    container_name: article_web
    volumes:
      - ./source/:/code
    depends_on:
      - db
      - redis
    command: sh -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    
  celery:
    container_name: articles_celery
    build:
      context: .
      dockerfile: source/Dockerfile
    command: watchmedo auto-restart --recursive --pattern="*.py" -- celery -A hello worker -l INFO
    restart: always
    env_file:
      - ./source/.env
    volumes:
      - ./source:/code/
    depends_on:
      - web
      - db
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: source/Dockerfile
    container_name: articles_beat
    command: celery -A hello beat
    restart: always
    env_file:
      - ./source/.env
    volumes:
      - ./source:/code/
    depends_on:
      - web
      - db
      - redis
      - celery